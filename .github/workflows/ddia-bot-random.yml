name: DDIA Bot - Random Time Daily

on:
  schedule:
    # Trigger at 7:00 PM IST (1:30 PM UTC) - will add random delay
    - cron: '30 13 * * *'
  workflow_dispatch:  # Manual trigger for testing

jobs:
  post-tweet:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Calculate random time between 7-11 PM IST
        id: random_time
        run: |
          # Generate random delay between 0-14400 seconds (0-4 hours)
          RANDOM_DELAY=$((RANDOM % 14400))
          
          # Calculate what time it will be
          CURRENT_HOUR=19  # 7 PM in 24-hour format
          DELAY_HOURS=$((RANDOM_DELAY / 3600))
          DELAY_MINUTES=$(((RANDOM_DELAY % 3600) / 60))
          
          POST_HOUR=$((CURRENT_HOUR + DELAY_HOURS))
          POST_MINUTE=$DELAY_MINUTES
          
          echo "delay=$RANDOM_DELAY" >> $GITHUB_OUTPUT
          echo "post_time=${POST_HOUR}:$(printf '%02d' ${POST_MINUTE}) PM IST" >> $GITHUB_OUTPUT
          
          echo "🎲 Random delay: $RANDOM_DELAY seconds"
          echo "⏰ Will post at: ${POST_HOUR}:$(printf '%02d' ${POST_MINUTE}) PM IST"
          
      - name: Wait for random time
        run: |
          DELAY=${{ steps.random_time.outputs.delay }}
          echo "⏳ Waiting $DELAY seconds ($(($DELAY / 60)) minutes)..."
          echo "📅 Posting at: ${{ steps.random_time.outputs.post_time }}"
          sleep $DELAY
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tweepy openai python-dotenv schedule
          
      - name: Load posted topics history
        run: |
          if [ ! -f posted_topics.json ]; then
            echo "[]" > posted_topics.json
            echo "📝 Created new posted_topics.json"
          else
            echo "📚 Loaded existing posted_topics.json"
          fi
          
      - name: Run DDIA Bot
        env:
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_ACTIONS: "true"
        run: |
          echo "🤖 Starting DDIA Bot..."
          echo "⏰ Current time: $(date '+%Y-%m-%d %H:%M:%S %Z')"
          python -c "
          from DDIA import AISystemDesignBot
          bot = AISystemDesignBot()
          success = bot.create_and_post()
          if not success:
              print('❌ Bot failed to post')
              import sys
              sys.exit(1)
          print('✅ Bot completed successfully')
          "
          
      - name: Commit updated posted_topics.json
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "DDIA Bot"
          
          if [ -f posted_topics.json ]; then
            git add posted_topics.json
            
            # Only commit if there are changes
            if git diff --staged --quiet; then
              echo "No changes to commit"
            else
              TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S IST')
              git commit -m "🤖 Update posted topics - $TIMESTAMP [skip ci]"
              echo "✅ Committed changes"
            fi
          fi
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          
      - name: Summary
        if: always()
        run: |
          echo "## 📊 Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Scheduled Time:** 7:00 PM IST" >> $GITHUB_STEP_SUMMARY
          echo "- **Actual Post Time:** ${{ steps.random_time.outputs.post_time }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f posted_topics.json ]; then
            TOPIC_COUNT=$(python3 -c "import json; print(len(json.load(open('posted_topics.json'))))" 2>/dev/null || echo "N/A")
            echo "- **Topics Posted:** $TOPIC_COUNT" >> $GITHUB_STEP_SUMMARY
          fi